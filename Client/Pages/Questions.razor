@page "/questions/{gameid:int}"
@using Reflectionnaire.Client.Modal
@using Reflectionnaire.Shared
@inject HttpClient Http

<PageTitle>Team of Influencers</PageTitle>

<h1>Team of Influencers</h1>
<p>Joined game: @GameId</p>
<p>Answer each question with a score between 1 and 5</p>

@if (_answers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditorForm>
        @foreach(var answer in _answers)
        {
            <div>
                <span>@answer.Question.Description</span>
                <InputRadioGroup TValue="int" Name="@answer.Question.Id.ToString()" @bind-Value="@answer.Score">
                    @for (var number = 1; number <= 5; number++)
                    {
                        <InputRadio Value="number"/>
                        @number
                    }
                </InputRadioGroup>
            </div>
        }
        <button @onclick="OnSentClicked">Versturen</button>
    </EditorForm>
}

@if (_scores != null)
{
    <div>
    @foreach (var score in _scores)
    {
        <div>
            <span>@score.Category: @score.TotalScore</span>
        </div>
    }
    </div>
}

@code {
    [Parameter]
    public int? GameId { get; set; }

    private Answer[]? _answers;

    private CategoryTotal[]? _scores;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var questions = await Http.GetFromJsonAsync<Question[]>("/api/Questions") ?? [];
            _answers = questions.Select(question => new Answer() { Question = question, Score = 3 }).ToArray();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }

    private void OnSentClicked(MouseEventArgs obj)
    {
        _scores = _answers?.GroupBy(answer => answer.Question.Category)
            .Select(group => new CategoryTotal { TotalScore = group.Sum(g => g.Score), Category = group.Key})
            .ToArray();
    }

}
